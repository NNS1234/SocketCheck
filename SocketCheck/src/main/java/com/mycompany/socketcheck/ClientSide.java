//Nudrat Nawal Saber
// 1001733394
package com.mycompany.socketcheck;

import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.showMessageDialog;


public class ClientSide extends javax.swing.JFrame {

    Socket requestSocket;
    PrintWriter out;
    BufferedReader in, input, serverInput;
    String message, serverMessage,curClient;
    private final int port = 5678;
    private JFrame jf;
    public ClientSide(String clientName) {
        curClient=clientName;
        initComponents();
        this.setTitle("Client : "+curClient);
        
        this.setResizable(false);
        jf=this;
        // For menubar cross button action
        jf.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                exitClient();
            }
        });
    }
    
    public int start_client(){
       try
       { 
            requestSocket = new Socket(InetAddress.getByName(null),port);
            try {
                    out = new PrintWriter(requestSocket.getOutputStream(), true);
                    out.println(curClient);
                    
                    serverInput = new BufferedReader(new InputStreamReader(requestSocket.getInputStream()));
                    this.setVisible(true);
                    // 1 for connection successful
                    return 1;
		} catch (IOException e) {
                        
                        showMessageDialog(null, "Server is closed", "Error", ERROR_MESSAGE);
			e.printStackTrace();
		}
       }
       catch(Exception e) {
            e.printStackTrace();
            // -1 for connection unsuccessful
            return -1;
       }
       return 1;
    }
    
    public void welcome(){
        taclient.append("Attempting Connection .....\n");   
        taclient.append("Connected to Server!\n"); 
        taclient.append("------------------------------\n");
    }
    
    private void sendToServer(){
        start_client();
        try {
                //Reading from text field
                message = tfclient.getText();
                tfclient.setText("");
                if (message.isEmpty()) {
                        taclient.append("Error: Enter text before sending to server. \n");
                        taclient.append("------------------------------\n");
                        return;
                }
                taclient.append("Text sent to server\n");
                //Sending to server
                out.println(message);
                taclient.append("My Request > " + message + "\n");
                //Reading response from server
                serverMessage = serverInput.readLine();
                taclient.append("Server Response > " + serverMessage + "\n");
                taclient.append("Spell check sequence completed\n");
                taclient.append("------------------------------\n");
        } catch (UnknownHostException unknownHost) {
                System.err.println("You are trying to connect to an unknown host!");
        } catch (IOException ioException) {
                ioException.printStackTrace();
        }
            // Closing socket
        try {
                out.close();
                serverInput.close();
                requestSocket.close();
        } catch (IOException ioException) {
                ioException.printStackTrace();
        }  
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        taclient = new javax.swing.JTextArea();
        tfclient = new javax.swing.JTextField();
        btnsend = new javax.swing.JButton();
        clientexit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        taclient.setEditable(false);
        taclient.setColumns(20);
        taclient.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        taclient.setRows(5);
        jScrollPane1.setViewportView(taclient);

        btnsend.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnsend.setText("Send");
        btnsend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsendActionPerformed(evt);
            }
        });

        clientexit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        clientexit.setText("Exit");
        clientexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientexitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Server");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Enter your text here");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tfclient, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnsend, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clientexit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfclient, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsend, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(clientexit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsendActionPerformed
        // TODO add your handling code here:
        sendToServer();
    }//GEN-LAST:event_btnsendActionPerformed
    private void exitClient(){
        try
        {    
             requestSocket = new Socket(InetAddress.getByName(null),port);
             try {
                     out = new PrintWriter(requestSocket.getOutputStream(), true);
                     // ! for indicate exit
                     out.println("!"+curClient);
                 } catch (IOException e) {
                         e.printStackTrace();
                 }
        }
        catch(Exception e) {
             e.printStackTrace();
        }
        System.exit(0);
    }
    private void clientexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientexitActionPerformed
        // TODO add your handling code here:
        exitClient();
    }//GEN-LAST:event_clientexitActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsend;
    private javax.swing.JButton clientexit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea taclient;
    private javax.swing.JTextField tfclient;
    // End of variables declaration//GEN-END:variables
}
