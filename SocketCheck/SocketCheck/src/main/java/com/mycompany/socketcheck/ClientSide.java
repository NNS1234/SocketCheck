/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.socketcheck;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;


public class ClientSide extends javax.swing.JFrame {

    /**
     * Creates new form ClientSide
     */
    Socket requestSocket;
    PrintWriter out;
    BufferedReader in, input, serverInput;
    String message, serverMessage;
    private String serverIP;
    private final int port = 5678;
    public ClientSide() {
        System.out.println(CreateClient.Username);
        initComponents();
        this.setTitle("Client");
        this.setVisible(true);
    }
    public void start_client(){
       try
       {
            taclient.append("Attempting Connection ...");
            requestSocket = new Socket(InetAddress.getByName(serverIP),port);
            taclient.append("Connected to Server\n"); 
            try {
                    out = new PrintWriter(requestSocket.getOutputStream(), true);
                    serverInput = new BufferedReader(new InputStreamReader(requestSocket.getInputStream()));
		} catch (IOException e) {
			e.printStackTrace();
		}

       }
       catch(Exception e)
       {
            e.printStackTrace();
       }
    }
    private void sendToServer(){
        start_client();
        try {
                //Reading from text field
                message = tfclient.getText();
                if (message.isEmpty()) {
                        taclient.append("Error: Enter text before sending to server. \n");
                        return;
                }
                tfclient.setText("");
                //Sending to server
                System.out.println("ClientSide : "+message);
                out.println(message);
             
                taclient.append("Client Request > " + message + "\n");
                //Reading response from server
                serverMessage = serverInput.readLine();
                taclient.append("Server Response > " + serverMessage + "\n");
                taclient.append("Terminating Connection \n");
                taclient.append("--------------------------------------\n");
        } catch (UnknownHostException unknownHost) {
                System.err.println("You are trying to connect to an unknown host!");
        } catch (IOException ioException) {
                ioException.printStackTrace();
        }
            /* Closing connection - Closing Socket */
        try {
                out.close();
                serverInput.close();
                requestSocket.close();
        } catch (IOException ioException) {
                ioException.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        taclient = new javax.swing.JTextArea();
        tfclient = new javax.swing.JTextField();
        btnsend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        taclient.setColumns(20);
        taclient.setRows(5);
        jScrollPane1.setViewportView(taclient);

        btnsend.setText("Send");
        btnsend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tfclient, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(btnsend, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfclient, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsend, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsendActionPerformed
        // TODO add your handling code here:
        sendToServer();
    }//GEN-LAST:event_btnsendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientSide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        System.out.println(args);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientSide().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsend;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea taclient;
    private javax.swing.JTextField tfclient;
    // End of variables declaration//GEN-END:variables
}
